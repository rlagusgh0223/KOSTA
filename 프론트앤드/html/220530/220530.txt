1교시
웹 프로그램은 프론트, 백엔드 구조가 있다

서버와 클라이언트가 직접적으로 연결되어 있다면
서버의 크기가 커지면 클라이언트 크기도 커진다
FAT Client : 클라이언트 컴퓨터에게 요구하는 사양이 크다?

웹서버를 사용할땐 웹서버의 크기와 상관없이 클라이언트는 웹브라우저만 있으면 사용할 수 있다
THIN Client - 웹프로그램의 첫번째 장점

220530_1

웹과 관련된 기술
--------------
웹서버에 만들어 두면 웹브라우저에서 요청하면 페이지 내용을 그대로 응답해줌(웹브라우저에서 실행)

클라이언트에서 실행되는 기술(ClientSideScript)
HTML - Rendering Engine이 처리
CSS - Rendering Engine이 처리
JavaScript - Java Script Interpreter(해석기)가 처리

거의 대부분의 웹브라우저들은 표준화된 웹브라우저 아키텍처(web browser architecture)를 사용한다

렌더링엔진의 주된 일
HTML 문서와 기타 자원의 웹 페이지를 사용자의 장치에 상호작용적인 시각 표현으로 변환시키는 것이다.
  -> 웹서버로부터 응답받은 내용을 렌더링 엔진이 한줄 한줄 해석하고 화면에 보여준다. 즉, HTML(데이터)+CSS(표현법)를 화면에 표현하는것. 한줄 한줄 데이터를 읽어오면(HTML) 표현법에 맞춰 화면에 보여준다(CSS)?





========================================
2교시
--------------
엄밀히 말하면 아래쪽은 언어는 아니다
기반을 갖고 있는 웹 기술이라고 보는게 맞다

서버에서 실행되는 기술(ServerSideScript)	- 기반언어와 사용가능한 웹서버가 다르다
		기반언어		웹서버
Servlet/JSP	JAVA		톰캣, 레진,		웹로직, 웹스피어, 제우스
				(Servlet/JSP 엔진 포함)	(Servlet/JSP/EJB 엔진 포함, 미들웨어)
							WAS : 미들웨어 역할 해주는것
ASP		Visual Basic	IIS(ASP실행용 DLL포함)
PHP		Perl, C++		아파치(PHP실행 모듈 포함)
--------------

기준을 필요로 하는 시간이 있다면 서버측에 맞춰야 된다
ex. 미국과 한국의 시간이 다른데 클라이언트 시간에 맞추면 기준시간 못 맞춘다

아파치는 톰캣보다 훨씬 안전하다
또한 톰캣은 쓸게 많으므로 톰캣으로 서버를 만들면 보통 아파치를 연동해서 사용한다
작은 프로젝트일 경우 굳이 WAS 쓸 필요 없다
220530_2





========================================
3교시
WAS(Web Application Server)
웹 환경에서 애플리케이션을 개발, 운용, 실행할 수 있는
플랫폼 역할을 하면서, 필요한 각종 서비스들을 제공

미들웨어
다양한 서비스를 제공하는것?

우리는 톰캣 설치할 것
https://apache.org/ - 맨 밑에 Tomcat - Download에 which version? - Tomcat버전과 서포트 되는 자바버전 - 우리는 8버전이니까 8 이후 버전을 본다. 10버전은 스프링에서 지원 잘 안해주니까 9버전 설치한다 - Tomcat9 - Core 에 zip으로 다운 - C:\244\SW에서 압축해제 - 해제한 폴더 내에 bin - startup.bat 클릭하면 시작, shutdown.bat 클릭하면 종료됨

웹 포트 8080쓰려고 한다(오라클의 웹포트와 같기 때문에 시작할 수 없다)
해결방법은 2개다
1. 오라클을 죽이거나
2. 톰캣의 포트번호를 바꾸거나 <- 우리는 이걸로함(80으로 바꿈)
conf - 이클립스(244\MyWEB으로 런치) - 하단에 Servers탭 - (이클립스에 톰캣서버 등록) - NEW Server클릭 - Aoache - Tomcat v9.0 - next - browse로 톰캣 설치한 폴더(C:\244\SW\apache-tomcat-9.0.63<-톰캣의 bin서버가 보이는 폴더)-next-fihish

Server에 등록된 url 더블클릭 - Server Locations에 2번째 레디오 버튼 체크(이미 설치되어 있는곳에 쓴다는 뜻) - 설치해놓은 apache서버 Ports에 8080을 8888로 바꾼다

Server에 등록된 url우클릭 - start - 액세스 허용 중간에 뜨면 허용할 것 - Console탭 보면 돌아가는거 볼 수 있다
종료하려면 다시 들어가서(Server에 등록된 url우클릭) - stop누른다





============================
4교시
Workspace바꿀때마다 환경설정 바꿔줘야 된다(그때그때 apply해줄것)
window - Preferences - General - Workspace - Text file encoding - other - UTF-8 / 
JAVA - Compiler - 1.8버전 / InstalledJREs - Add - standard VM - next - directory - c:programfiles\java\jdk~ finish - jdk 체크 / Web - CSS Files - Encoding - UTF-8(가장 위에 있음 / HTML files  - Encoding - UTF-8 / JSP Files - Encoding - UTF-8

html파일 작성후 톰캣 서버에 배포
Servers탭의 주소 우클릭 - Add and Remove - 왼쪽의 이클립스에서 만든 프로젝트를
Add 눌러서 톰캣서버에 배포하도록 한다(제거하려면 오른쪽에 있는그거 선택 후 Remove)





============================
5교시
만약 에러 떠서 돌아가지 않는다면
Server에 톰캣 - Open launch Configureation - Arguments에서 VM arguments에 --add-opens 모두 지우면 돌아간다

톰캣 파일 우클릭 - start하고 크롬 같은 웹브라우저에서 https://localhost:8888/front/html/basic.html


마크업언어 : 태그(시작태그와 종료태그)로 구성된 언어
HTML : Hyper Text MArkup Language
<!DOCTYPE html> : 문서유형(우리건 html5버전 문서) - 5버전 이외의 버전은 html뒤에 뭐가 많이 붙는다
<head><title>탭의 타이틀</title></head>
<body>탭 및의 중앙영역</body>


웹에서 반드시 지켜야 하는것
공공기관에서는 이걸 검증한다
웹표준화 - 브라우저에 관계없이 같은 결과가 표현
웹접근성 - 확대/축소되어도 화면구성(레이아웃)이 깨지지 않도록 표현




============================
6교시
https://www.w3schools.com/

elements : 태그 시작부터 끝까지를 하나의 엘리멘트라고 한다

WorldWideWeb - www -웹
웹의 표준화 단체 - w3c
웹의 표준 언어 - HTML




============================
7교시
<html - basic.html>
상대경로
자바에서 한것처럼 자기자신을 기준으로 줄 수 도 있고
아래처럼 줄 수 도 있다
  <a href="/front/html/self-introduction.html" target="_blank">자기소개서</a> : 배포된 프로젝트 경로(front) 밑에있는 좌표


<img width="200">  // 가로 크기만 줬다. 세로크기는 알아서 자동 비율 조정 된다
       width="50%">  // 부모의 가로길이의 50%만큼만 차지
-> 비율을 정하고 싶으면 %를, 고정된 크기를 원하면 크기를 지정해주면 된다


<table> 태그와 <p>태그는 같이 쓰지 않는걸 권장한다




============================
8교시
테이블에 테두리 그리기
<table border="1"></table>


가로 넓이 정하기(이렇게 하면 테두리는 안보이지만 칸은 넓이만큼 떨어진다)
<table width="500">
단, 권장하는 방법은 아니다

권장방법
단, 이렇게 하면 테이블 안의 행과 열에는 선이 그어지지 않고 바깥 테두리만 선이 그어진다
<table style="border:1px solid;width:500px;">
테이블 안쪽 각 테그별로 지정해줘야 테두리 안에도 선이 그어진다


행 결합
<td rowspan="2"> : 두개 행을 결합
<td colspan="2"> : 두개 열을 결합


<thread><tbody><tfoot>없이도 동일한 결과가 나오니까 일반적으로 많이 생략한다(크롬에서는 자동으로 tbody로 받는다)

ol과 ul은 <p>붙일 필요 없다
<ol></ol> : 앞에 번호가 붙는다
<ul></ul> : 앞에 점이 붙는다


<html - blockinline.html>
<div>는 알아서 줄바꿈이 되지만(div 하나가 한 줄을 다 차지하니까 - block요소)
<span>은 안된다(가로 넓이가 내용만큼만 주어지니까 - inline 요소)